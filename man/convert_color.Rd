% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_color.R
\name{convert_color}
\alias{convert_color}
\alias{as.rgb}
\alias{as.rgba}
\alias{as.hsv}
\alias{as.hsl}
\alias{as.hsi}
\alias{as.hcl}
\alias{as.lch}
\alias{as.lab}
\alias{as.cmyk}
\alias{as.css}
\alias{as.hex}
\alias{as.temperature}
\alias{as.wavelength}
\alias{as.ryb}
\title{Convert colors to a given color model}
\usage{
convert_color(x, model)

as.rgb(x)

as.rgba(x)

as.hsv(x)

as.hsl(x)

as.hsi(x)

as.hcl(x)

as.lch(x)

as.lab(x)

as.cmyk(x)

as.css(x)

as.hex(x)

as.temperature(x)

as.wavelength(x)

as.ryb(x)
}
\arguments{
\item{x}{vector of colors specified as hex strings or named R colors.}

\item{model}{string defining the color model; valid models are \code{rgb}, \code{rgba}, \code{ryb}, \code{hsv}, \code{hsl}, \code{hsi}, \code{hcl}, \code{lch}, \code{lab}, \code{cmyk}, \code{css}, \code{hex}, \code{temperature}, \code{wavelength}.}
}
\value{
A matrix containing the color components in most cases, except for the models:
\describe{
 \item{\code{css}}{a vector of css color definition strings,}
 \item{\code{hex}}{a vector of hexadecimal strings defining colors,}
 \item{\code{temperature}}{a vector of numbers corresponding to the temperature of the colors in Kelvin,}
 \item{\code{wavelength}}{a vector of numbers corresponding to the wavelength of monochromatic light closest to the input colors.}
}
}
\description{
Convert a vector of colors to a given color model.
}
\details{
All colors in chroma are represented internally as hex codes in sRGB space. So if a color exists in that space, converting it to most other models will be lossless and reversible. For example, converting from \code{rgb} to \code{lab} back to \code{rgb} should give the same R, G, and B values. If the starting color is not representable in sRGB, it will be converted to the closest sRGB color and the reversibility will be lost. In addition, the \code{temperature} and \code{wavelength} color "models" are very different because they represent only one aspect of the color (its temperature or its corresponding wavelength) and conversion to those is almost never lossless or reversible.
}
\examples{
convert_color("red", model="rgb")
convert_color("red", model="hsl")
convert_color("red", model="hcl")
convert_color("red", model="cmyk")

as.hsv("red")
as.lab("red")
as.lch("red")

as.css("red")
as.hex("red")
as.temperature("red")
as.wavelength("red")

# Can be vectorised
as.rgb(colors()[1:5])
as.rgb(c("#B55FFC", "blue", "purple", "#6A9F16"))

# Starting from sRGB leads to reversibility
col <- rgb(150, 100, 200, maxColorValue=255)
as.cmyk(col)
as.rgb(cmyk(as.cmyk(col)))
# or near-reversability
col <- lab(0.5, 0.5, 0)
col
as.lab(col)

# But starting outside of sRGB looses reversibility
col <- lab(0.5, -0.5, -1)
# this L*a*b* color does not exist in sRGB => it is converted to the
# closest sRGB equivalent
col
# and is different from the original L*a*b* specification
as.lab(col)
}
\seealso{
\code{\link{parse_color}} for a general function to parse colors in various specifications.
}
